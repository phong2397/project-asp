@model IceCream.Models.Recipe

@{
    ViewBag.Title = "Edit";
}

<h2 class="hh2">Edit Recipes</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            <p class="pp">Title</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="pp">Discriptions</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="pp">Image Links</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Imag, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Imag, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="pp">Link Video Recipe</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.LinkYT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LinkYT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="pp">Status</p>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Status, IceCream.Models.Status.GetStatusList(), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-warning"/>
            </div>
        </div>
    </div>
}

    <a href="@Url.Action("Index", "Home")"><button class="btn btn-secondary" style="display: inline-block"> <<========== Back To Manage Page</button></a>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>


<link rel="stylesheet" type="text/css" href="~/Content/style_admin_edit.css">